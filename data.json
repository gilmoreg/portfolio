{
  "repos" : [
    {
      "name" : "anikunchan",
      "cardImage" : "http://res.cloudinary.com/dk85nueap/image/upload/c_scale,h_200/v1494283259/Screen_Shot_2017-05-08_at_5.35.46_PM_ujgsri.png",
      "blog" : [
        "My first project as a **Thinkful** student. The assignment was simply to consume a REST API, but I wanted to reach higher and integrate multiple APIs, and this was the result. I ran into obstacles early as several APIs I had planned to use ended up not working. For example, Myanimelist’s API did not turn out to be viable as a public source of data, and Twitter and Imgur only provide data for currently trending topics (not suitable for searches on older shows). Originally it appeared that Google Image Search had been deprecated, but I later discovered that their **Custom Search Engine** still supported an image search if configured properly, and its free tier would suffice for a project like this.",
        "By the time I finished the first version of this project, I was comfortable using **JQuery** and **responsive design**. I was also able to able to experiment with **Flexbox**.",
        "I later revisited this project with the benefit of having studied server side programming. I was always disturbed that my API keys were exposed in the source, so I leveraged the **Serverless Framework** with **AWS Lamdba** functions to proxy the API calls without exposing the keys. I was surprised at how easy the Serverless Framework makes it!",
        "With the benefit of hindsight, I noticed that I had been too aggressive in attempting to avoid reusing code. I introduced a great deal of complexity simply to avoid reusing about 10 lines of code. Lessons learned!"
      ],
      "screenshots" : [
        "https://cloud.githubusercontent.com/assets/18176333/22078537/ed5b02da-dd7d-11e6-9a3a-21f8397af8b5.png"
      ]
    },
    {
      "name": "condictor",
      "cardImage" : "test",
      "blog" : [
        "As this was my final project as a **Thinkful** student, I really wanted to shoot for the moon on this one. I challenged myself to pick up several frameworks and libraries outside the curriculum and broaden my knowledge as much as possible.",
        "I decided early that I would try out **GraphQL**, and that turned out to be an amazing adventure of highs and lows! The server side implementation was unexpectedly easy; the challenges really came on the client side. I was drawn to **Apollo Client** and I tried hard to make it work, but ultimately decided that this project wasn’t a good fit. I learned a ton about **Redux** trying to make Apollo and Redux play along, and I experienced some of the pains of dealing with emerging technology (at one point discovering the source of a problem in a change that wasn’t documented outside of the changelog). In the end it made more sense for me to use **Lokka** in my Redux actions, but I was grateful for the experience.",
        "I also had quite the journey troubleshooting a **Passport** problem (which turned out to be, as it so often is, a simple mistake in what looked like solid code). It was at this point that I learned about using **Chrome DevTools** to debug **Node**. I was stepping through the **Express** and **Passport** source line by line trying to discover the problem. I got to see how Express middleware layers work in practice - quite an educational experience!"
      ],
      "screenshots" : [
        "http://res.cloudinary.com/dk85nueap/image/upload/c_scale,w_300/v1494190293/Screen_Shot_2017-05-07_at_3.49.04_PM_jgbddw.png",
        "http://res.cloudinary.com/dk85nueap/image/upload/c_scale,w_300/v1494190358/Screen_Shot_2017-05-07_at_3.48.51_PM_nnswrt.png",
        "http://res.cloudinary.com/dk85nueap/image/upload/c_scale,w_300/v1494190391/Screen_Shot_2017-05-07_at_3.48.12_PM_b0gx2w.png"
      ]
    },
    {
      "name" : "steam-battle",
      "cardImage" : "test",
      "blog" : [
        "Enter two Steam IDs (in any of the accepted formats) and see which gamer is more hardcore! Steam Battle will calculate a score based on the number of games owned and hours played; time played in the last two weeks counts for double!",
        "If you don't know any Steam users you can just hit Random to see a battle between two random players!"
      ],
      "screenshots" : [
        "https://cloud.githubusercontent.com/assets/18176333/24309924/c9490b84-109b-11e7-8f7a-4d2e4ee1b365.png"
      ]
    },
    {
      "name" : "referendus",
      "cardImage" : "test",
      "blog" : [
        "My first fullstack project as a **Thinkful** student. I really wanted to challenge myself to make a complicated back end, with flexible endpoints including authentication. I think I was able to take a relatively complicated problem and rationally organize it.",
        "One challenge I encountered was that due to security concerns clipboard functions must be invoked a very short time after the user action that triggers them, meaning that I could not wait for the network. This meant that I had to develop a local cache that would mirror the server’s data and keep them in sync, so that the user would be getting accurate results when copying to the clipboard. I toyed with using **LocalStorage** for this, but it turned out that memory was sufficient. I did however use LocalStorage to store the user’s format choice.",
        "Using **Bootstrap** allowed me to use my frontend development time efficiently and focus more time on the server side."
      ],
      "screenshots" : [
        "https://cloud.githubusercontent.com/assets/18176333/22914304/5e6e4e3e-f235-11e6-8c51-b1622ae48f38.png"
      ]
    }
  ]
}
